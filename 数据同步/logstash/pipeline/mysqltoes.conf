input {
 stdin { }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://192.168.200.128:3306/restkeeper_store?serverTimezone=Asia/Shanghai&useSSL=false"
  
        jdbc_user => "root"
 
        jdbc_password => "root"
 
        jdbc_driver_library => "/resource/mysql-connector-java-8.0.15.jar"
 
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"

        jdbc_default_timezone =>"Asia/Shanghai"

        #使用其他字段追总而不是时间
        use_column_value => true
        #追踪的字段
        tracking_column => "last_update_time"
        #追踪列的类型
        tracking_column_type => "timestamp"
        
        #记录上次追踪字段的值
        #record_last_run => true
        #上一个sql_last_value值的存放文件路径, 必须要在文件中指定字段的初始值
        #last_run_metadata_path => "/mysql/dish_parameter.txt"

        #开启分页查询
        jdbc_paging_enabled => true

        #分页大小
        jdbc_page_size => "100"
        statement => "SELECT dish_id as id,dish_name,code,is_deleted,price,status as state,image,shop_id,store_id,last_update_time, 1 as type FROM t_dish where last_update_time > :sql_last_value"
        schedule => "0/5 * * * * *"
    }
 }
 
input {
 stdin { }
    jdbc {
        jdbc_connection_string => "jdbc:mysql://192.168.200.128:3306/restkeeper_store?serverTimezone=Asia/Shanghai&useSSL=false"
  
        jdbc_user => "root"
 
        jdbc_password => "root"
 
        jdbc_driver_library => "/resource/mysql-connector-java-8.0.15.jar"
 
        jdbc_driver_class => "com.mysql.cj.jdbc.Driver"
        jdbc_default_timezone => "Asia/Shanghai"

        #使用其他字段追总而不是时间
        use_column_value => true
        #追踪的字段
        tracking_column => "last_update_time"
        #追踪列的类型
        tracking_column_type => "timestamp"
        
        

        #记录上次追踪字段的值
        #record_last_run => true
        #上一个sql_last_value值的存放文件路径, 必须要在文件中指定字段的初始值
        #last_run_metadata_path => "/mysql/setmeal_parameter.txt"
         
        jdbc_paging_enabled => "true"
         
        jdbc_page_size => "50000"
        statement => "SELECT setmeal_id as id,setmeal_name as dish_name,code,status as state,price as price,shop_id,store_id,2 as type,last_update_time,is_deleted FROM t_setmeal where last_update_time > :sql_last_value order by last_update_time desc"
        schedule => "0/5 * * * * *"
    }
 }
  
 output {
     stdout {
        codec => json_lines
    }
    elasticsearch {
        hosts => "192.168.200.128:9200"
        index => "dish"
        document_id => "%{id}"
    }
}

filter {
  ruby {
    code => "event.timestamp.time.localtime"
  }
}
